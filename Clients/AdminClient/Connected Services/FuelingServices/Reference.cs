//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Manager.FuelingServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FleetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicturePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Color WorkspaceColorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginPassword {
            get {
                return this.LoginPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginPasswordField, value) != true)) {
                    this.LoginPasswordField = value;
                    this.RaisePropertyChanged("LoginPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicturePath {
            get {
                return this.PicturePathField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturePathField, value) != true)) {
                    this.PicturePathField = value;
                    this.RaisePropertyChanged("PicturePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Color WorkspaceColor {
            get {
                return this.WorkspaceColorField;
            }
            set {
                if ((this.WorkspaceColorField.Equals(value) != true)) {
                    this.WorkspaceColorField = value;
                    this.RaisePropertyChanged("WorkspaceColor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Station))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.City))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Tag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Fleet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Product))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Rule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.ProductLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Car))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.Transaction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.RejectedRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Manager.FuelingServices.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Station : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Manager.FuelingServices.Tag> TagsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationID {
            get {
                return this.StationIDField;
            }
            set {
                if ((this.StationIDField.Equals(value) != true)) {
                    this.StationIDField = value;
                    this.RaisePropertyChanged("StationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationName {
            get {
                return this.StationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StationNameField, value) != true)) {
                    this.StationNameField = value;
                    this.RaisePropertyChanged("StationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Manager.FuelingServices.Tag> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class City : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Tag : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fleet", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Fleet : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FleetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Manager.FuelingServices.User> UsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Credit {
            get {
                return this.CreditField;
            }
            set {
                if ((this.CreditField.Equals(value) != true)) {
                    this.CreditField = value;
                    this.RaisePropertyChanged("Credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogoPath {
            get {
                return this.LogoPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoPathField, value) != true)) {
                    this.LogoPathField = value;
                    this.RaisePropertyChanged("LogoPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Manager.FuelingServices.User> Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Product : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rule", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Rule : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FleetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Manager.FuelingServices.ProductLimit> LimitedProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Manager.FuelingServices.Tag> TagsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Manager.FuelingServices.ProductLimit> LimitedProducts {
            get {
                return this.LimitedProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitedProductsField, value) != true)) {
                    this.LimitedProductsField = value;
                    this.RaisePropertyChanged("LimitedProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleName {
            get {
                return this.RuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleNameField, value) != true)) {
                    this.RuleNameField = value;
                    this.RaisePropertyChanged("RuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Manager.FuelingServices.Tag> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductLimit", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class ProductLimit : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DailyVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MonthlyVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DailyVolume {
            get {
                return this.DailyVolumeField;
            }
            set {
                if ((this.DailyVolumeField.Equals(value) != true)) {
                    this.DailyVolumeField = value;
                    this.RaisePropertyChanged("DailyVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimitID {
            get {
                return this.LimitIDField;
            }
            set {
                if ((this.LimitIDField.Equals(value) != true)) {
                    this.LimitIDField = value;
                    this.RaisePropertyChanged("LimitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MonthlyVolume {
            get {
                return this.MonthlyVolumeField;
            }
            set {
                if ((this.MonthlyVolumeField.Equals(value) != true)) {
                    this.MonthlyVolumeField = value;
                    this.RaisePropertyChanged("MonthlyVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Car : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Fleet FleetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FleetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenufactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Rule RuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RuleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarID {
            get {
                return this.CarIDField;
            }
            set {
                if ((this.CarIDField.Equals(value) != true)) {
                    this.CarIDField = value;
                    this.RaisePropertyChanged("CarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Fleet Fleet {
            get {
                return this.FleetField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetField, value) != true)) {
                    this.FleetField = value;
                    this.RaisePropertyChanged("Fleet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Menufactor {
            get {
                return this.MenufactorField;
            }
            set {
                if ((object.ReferenceEquals(this.MenufactorField, value) != true)) {
                    this.MenufactorField = value;
                    this.RaisePropertyChanged("Menufactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDField, value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerPhoneNumber {
            get {
                return this.OwnerPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPhoneNumberField, value) != true)) {
                    this.OwnerPhoneNumberField = value;
                    this.RaisePropertyChanged("OwnerPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNumber {
            get {
                return this.PlateNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNumberField, value) != true)) {
                    this.PlateNumberField = value;
                    this.RaisePropertyChanged("PlateNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Rule Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((this.RuleIDField.Equals(value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Transaction : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Rule RuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Station StationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Rule Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Station Station {
            get {
                return this.StationField;
            }
            set {
                if ((object.ReferenceEquals(this.StationField, value) != true)) {
                    this.StationField = value;
                    this.RaisePropertyChanged("Station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPayment {
            get {
                return this.TotalPaymentField;
            }
            set {
                if ((this.TotalPaymentField.Equals(value) != true)) {
                    this.TotalPaymentField = value;
                    this.RaisePropertyChanged("TotalPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((this.TransactionIDField.Equals(value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectedRequest", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class RejectedRequest : Manager.FuelingServices.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RejectedRequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RejectedRequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Rule RuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.FuelingServices.Station StationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RejectedRequestDate {
            get {
                return this.RejectedRequestDateField;
            }
            set {
                if ((this.RejectedRequestDateField.Equals(value) != true)) {
                    this.RejectedRequestDateField = value;
                    this.RaisePropertyChanged("RejectedRequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RejectedRequestID {
            get {
                return this.RejectedRequestIDField;
            }
            set {
                if ((this.RejectedRequestIDField.Equals(value) != true)) {
                    this.RejectedRequestIDField = value;
                    this.RaisePropertyChanged("RejectedRequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Rule Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.FuelingServices.Station Station {
            get {
                return this.StationField;
            }
            set {
                if ((object.ReferenceEquals(this.StationField, value) != true)) {
                    this.StationField = value;
                    this.RaisePropertyChanged("Station");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FuelingServices.IFuelingManagmentService")]
    public interface IFuelingManagmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetUsers", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetUsersResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.User> GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetUsers", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.User>> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetUserByLoginName", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetUserByLoginNameResponse")]
        Manager.FuelingServices.User GetUserByLoginName(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetUserByLoginName", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetUserByLoginNameResponse")]
        System.Threading.Tasks.Task<Manager.FuelingServices.User> GetUserByLoginNameAsync(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddUser", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddUserResponse")]
        void AddUser(Manager.FuelingServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddUser", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(Manager.FuelingServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateUser", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateUserResponse")]
        void UpdateUser(Manager.FuelingServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateUser", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(Manager.FuelingServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteUser", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteUserResponse")]
        void DeleteUser(Manager.FuelingServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteUser", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(Manager.FuelingServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetStations", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetStationsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Station> GetStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetStations", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetStationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Station>> GetStationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetStationsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetStationsAmountResponse")]
        int GetStationsAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetStationsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetStationsAmountResponse")]
        System.Threading.Tasks.Task<int> GetStationsAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetTags", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetTagsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Tag> GetTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetTags", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Tag>> GetTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetCities", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetCitiesResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.City> GetCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetCities", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetCitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.City>> GetCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddStation", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddStationResponse")]
        void AddStation(Manager.FuelingServices.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddStation", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddStationResponse")]
        System.Threading.Tasks.Task AddStationAsync(Manager.FuelingServices.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddStationsTags", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddStationsTagsResponse")]
        void AddStationsTags(int stationId, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddStationsTags", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddStationsTagsResponse")]
        System.Threading.Tasks.Task AddStationsTagsAsync(int stationId, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateStation", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateStationResponse")]
        void UpdateStation(Manager.FuelingServices.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateStation", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateStationResponse")]
        System.Threading.Tasks.Task UpdateStationAsync(Manager.FuelingServices.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateStationsTags", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateStationsTagsResponse")]
        void UpdateStationsTags(int stationID, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateStationsTags", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateStationsTagsResponse")]
        System.Threading.Tasks.Task UpdateStationsTagsAsync(int stationID, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteStation", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteStationResponse")]
        void DeleteStation(Manager.FuelingServices.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteStation", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteStationResponse")]
        System.Threading.Tasks.Task DeleteStationAsync(Manager.FuelingServices.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleets", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Fleet> GetFleets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleets", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Fleet>> GetFleetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetsAmountResponse")]
        int GetFleetsAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetsAmountResponse")]
        System.Threading.Tasks.Task<int> GetFleetsAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddFleetResponse")]
        void AddFleet(Manager.FuelingServices.Fleet fleet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddFleetResponse")]
        System.Threading.Tasks.Task AddFleetAsync(Manager.FuelingServices.Fleet fleet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddUsersToFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddUsersToFleetResponse")]
        void AddUsersToFleet(System.Collections.Generic.List<Manager.FuelingServices.User> lstUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddUsersToFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddUsersToFleetResponse")]
        System.Threading.Tasks.Task AddUsersToFleetAsync(System.Collections.Generic.List<Manager.FuelingServices.User> lstUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateFleetResponse")]
        void UpdateFleet(Manager.FuelingServices.Fleet fleet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateFleetResponse")]
        System.Threading.Tasks.Task UpdateFleetAsync(Manager.FuelingServices.Fleet fleet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteFleetResponse")]
        void DeleteFleet(Manager.FuelingServices.Fleet fleet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteFleet", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteFleetResponse")]
        System.Threading.Tasks.Task DeleteFleetAsync(Manager.FuelingServices.Fleet fleet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetProductsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetProductsAmountResponse")]
        int GetProductsAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetProductsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetProductsAmountResponse")]
        System.Threading.Tasks.Task<int> GetProductsAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetProducts", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetProductsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Product> GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetProducts", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Product>> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddProduct", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddProductResponse")]
        void AddProduct(Manager.FuelingServices.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddProduct", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(Manager.FuelingServices.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateProduct", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateProductResponse")]
        void UpdateProduct(Manager.FuelingServices.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateProduct", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(Manager.FuelingServices.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteProduct", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteProductResponse")]
        void DeleteProduct(Manager.FuelingServices.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteProduct", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(Manager.FuelingServices.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetRules", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetRulesResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Rule> GetFleetRules(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetRules", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetRulesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Rule>> GetFleetRulesAsync(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetRuleByID", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetRuleByIDResponse")]
        Manager.FuelingServices.Rule GetRuleByID(System.Nullable<int> ruleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetRuleByID", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetRuleByIDResponse")]
        System.Threading.Tasks.Task<Manager.FuelingServices.Rule> GetRuleByIDAsync(System.Nullable<int> ruleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetRulesAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetRulesAmountResponse")]
        int GetFleetRulesAmount(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetRulesAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetRulesAmountResponse")]
        System.Threading.Tasks.Task<int> GetFleetRulesAmountAsync(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddRule", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddRuleResponse")]
        void AddRule(Manager.FuelingServices.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddRule", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddRuleResponse")]
        System.Threading.Tasks.Task AddRuleAsync(Manager.FuelingServices.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateRule", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateRuleResponse")]
        void UpdateRule(Manager.FuelingServices.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateRule", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateRuleResponse")]
        System.Threading.Tasks.Task UpdateRuleAsync(Manager.FuelingServices.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteRule", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteRuleResponse")]
        void DeleteRule(Manager.FuelingServices.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteRule", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteRuleResponse")]
        System.Threading.Tasks.Task DeleteRuleAsync(Manager.FuelingServices.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetCars", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetCarsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Car> GetFleetCars(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetCars", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetCarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Car>> GetFleetCarsAsync(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetCarsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetCarsAmountResponse")]
        int GetFleetCarsAmount(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetFleetCarsAmount", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetFleetCarsAmountResponse")]
        System.Threading.Tasks.Task<int> GetFleetCarsAmountAsync(int fleetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddWorkerCar", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddWorkerCarResponse")]
        void AddWorkerCar(Manager.FuelingServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/AddWorkerCar", ReplyAction="http://tempuri.org/IFuelingManagmentService/AddWorkerCarResponse")]
        System.Threading.Tasks.Task AddWorkerCarAsync(Manager.FuelingServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateWorkerCar", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateWorkerCarResponse")]
        void UpdateWorkerCar(Manager.FuelingServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/UpdateWorkerCar", ReplyAction="http://tempuri.org/IFuelingManagmentService/UpdateWorkerCarResponse")]
        System.Threading.Tasks.Task UpdateWorkerCarAsync(Manager.FuelingServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteWorkerCar", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteWorkerCarResponse")]
        void DeleteWorkerCar(Manager.FuelingServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/DeleteWorkerCar", ReplyAction="http://tempuri.org/IFuelingManagmentService/DeleteWorkerCarResponse")]
        System.Threading.Tasks.Task DeleteWorkerCarAsync(Manager.FuelingServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetTransactions", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetTransactionsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Transaction> GetTransactions(int fleetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetTransactions", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Transaction>> GetTransactionsAsync(int fleetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetTransactionsByCarID", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetTransactionsByCarIDResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.Transaction> GetTransactionsByCarID(int carID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetTransactionsByCarID", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetTransactionsByCarIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Transaction>> GetTransactionsByCarIDAsync(int carID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetRejectedRequests", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetRejectedRequestsResponse")]
        System.Collections.Generic.List<Manager.FuelingServices.RejectedRequest> GetRejectedRequests(int fleetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingManagmentService/GetRejectedRequests", ReplyAction="http://tempuri.org/IFuelingManagmentService/GetRejectedRequestsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.RejectedRequest>> GetRejectedRequestsAsync(int fleetID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFuelingManagmentServiceChannel : Manager.FuelingServices.IFuelingManagmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FuelingManagmentServiceClient : System.ServiceModel.ClientBase<Manager.FuelingServices.IFuelingManagmentService>, Manager.FuelingServices.IFuelingManagmentService {
        
        public FuelingManagmentServiceClient() {
        }
        
        public FuelingManagmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FuelingManagmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FuelingManagmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FuelingManagmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.User> GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.User>> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public Manager.FuelingServices.User GetUserByLoginName(string loginName) {
            return base.Channel.GetUserByLoginName(loginName);
        }
        
        public System.Threading.Tasks.Task<Manager.FuelingServices.User> GetUserByLoginNameAsync(string loginName) {
            return base.Channel.GetUserByLoginNameAsync(loginName);
        }
        
        public void AddUser(Manager.FuelingServices.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(Manager.FuelingServices.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void UpdateUser(Manager.FuelingServices.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(Manager.FuelingServices.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public void DeleteUser(Manager.FuelingServices.User user) {
            base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(Manager.FuelingServices.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Station> GetStations() {
            return base.Channel.GetStations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Station>> GetStationsAsync() {
            return base.Channel.GetStationsAsync();
        }
        
        public int GetStationsAmount() {
            return base.Channel.GetStationsAmount();
        }
        
        public System.Threading.Tasks.Task<int> GetStationsAmountAsync() {
            return base.Channel.GetStationsAmountAsync();
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Tag> GetTags() {
            return base.Channel.GetTags();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Tag>> GetTagsAsync() {
            return base.Channel.GetTagsAsync();
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.City> GetCities() {
            return base.Channel.GetCities();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.City>> GetCitiesAsync() {
            return base.Channel.GetCitiesAsync();
        }
        
        public void AddStation(Manager.FuelingServices.Station station) {
            base.Channel.AddStation(station);
        }
        
        public System.Threading.Tasks.Task AddStationAsync(Manager.FuelingServices.Station station) {
            return base.Channel.AddStationAsync(station);
        }
        
        public void AddStationsTags(int stationId, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags) {
            base.Channel.AddStationsTags(stationId, tags);
        }
        
        public System.Threading.Tasks.Task AddStationsTagsAsync(int stationId, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags) {
            return base.Channel.AddStationsTagsAsync(stationId, tags);
        }
        
        public void UpdateStation(Manager.FuelingServices.Station station) {
            base.Channel.UpdateStation(station);
        }
        
        public System.Threading.Tasks.Task UpdateStationAsync(Manager.FuelingServices.Station station) {
            return base.Channel.UpdateStationAsync(station);
        }
        
        public void UpdateStationsTags(int stationID, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags) {
            base.Channel.UpdateStationsTags(stationID, tags);
        }
        
        public System.Threading.Tasks.Task UpdateStationsTagsAsync(int stationID, System.Collections.Generic.List<Manager.FuelingServices.Tag> tags) {
            return base.Channel.UpdateStationsTagsAsync(stationID, tags);
        }
        
        public void DeleteStation(Manager.FuelingServices.Station station) {
            base.Channel.DeleteStation(station);
        }
        
        public System.Threading.Tasks.Task DeleteStationAsync(Manager.FuelingServices.Station station) {
            return base.Channel.DeleteStationAsync(station);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Fleet> GetFleets() {
            return base.Channel.GetFleets();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Fleet>> GetFleetsAsync() {
            return base.Channel.GetFleetsAsync();
        }
        
        public int GetFleetsAmount() {
            return base.Channel.GetFleetsAmount();
        }
        
        public System.Threading.Tasks.Task<int> GetFleetsAmountAsync() {
            return base.Channel.GetFleetsAmountAsync();
        }
        
        public void AddFleet(Manager.FuelingServices.Fleet fleet) {
            base.Channel.AddFleet(fleet);
        }
        
        public System.Threading.Tasks.Task AddFleetAsync(Manager.FuelingServices.Fleet fleet) {
            return base.Channel.AddFleetAsync(fleet);
        }
        
        public void AddUsersToFleet(System.Collections.Generic.List<Manager.FuelingServices.User> lstUsers) {
            base.Channel.AddUsersToFleet(lstUsers);
        }
        
        public System.Threading.Tasks.Task AddUsersToFleetAsync(System.Collections.Generic.List<Manager.FuelingServices.User> lstUsers) {
            return base.Channel.AddUsersToFleetAsync(lstUsers);
        }
        
        public void UpdateFleet(Manager.FuelingServices.Fleet fleet) {
            base.Channel.UpdateFleet(fleet);
        }
        
        public System.Threading.Tasks.Task UpdateFleetAsync(Manager.FuelingServices.Fleet fleet) {
            return base.Channel.UpdateFleetAsync(fleet);
        }
        
        public void DeleteFleet(Manager.FuelingServices.Fleet fleet) {
            base.Channel.DeleteFleet(fleet);
        }
        
        public System.Threading.Tasks.Task DeleteFleetAsync(Manager.FuelingServices.Fleet fleet) {
            return base.Channel.DeleteFleetAsync(fleet);
        }
        
        public int GetProductsAmount() {
            return base.Channel.GetProductsAmount();
        }
        
        public System.Threading.Tasks.Task<int> GetProductsAmountAsync() {
            return base.Channel.GetProductsAmountAsync();
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Product> GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Product>> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public void AddProduct(Manager.FuelingServices.Product product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(Manager.FuelingServices.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public void UpdateProduct(Manager.FuelingServices.Product product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(Manager.FuelingServices.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public void DeleteProduct(Manager.FuelingServices.Product product) {
            base.Channel.DeleteProduct(product);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(Manager.FuelingServices.Product product) {
            return base.Channel.DeleteProductAsync(product);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Rule> GetFleetRules(int fleetId) {
            return base.Channel.GetFleetRules(fleetId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Rule>> GetFleetRulesAsync(int fleetId) {
            return base.Channel.GetFleetRulesAsync(fleetId);
        }
        
        public Manager.FuelingServices.Rule GetRuleByID(System.Nullable<int> ruleID) {
            return base.Channel.GetRuleByID(ruleID);
        }
        
        public System.Threading.Tasks.Task<Manager.FuelingServices.Rule> GetRuleByIDAsync(System.Nullable<int> ruleID) {
            return base.Channel.GetRuleByIDAsync(ruleID);
        }
        
        public int GetFleetRulesAmount(int fleetId) {
            return base.Channel.GetFleetRulesAmount(fleetId);
        }
        
        public System.Threading.Tasks.Task<int> GetFleetRulesAmountAsync(int fleetId) {
            return base.Channel.GetFleetRulesAmountAsync(fleetId);
        }
        
        public void AddRule(Manager.FuelingServices.Rule rule) {
            base.Channel.AddRule(rule);
        }
        
        public System.Threading.Tasks.Task AddRuleAsync(Manager.FuelingServices.Rule rule) {
            return base.Channel.AddRuleAsync(rule);
        }
        
        public void UpdateRule(Manager.FuelingServices.Rule rule) {
            base.Channel.UpdateRule(rule);
        }
        
        public System.Threading.Tasks.Task UpdateRuleAsync(Manager.FuelingServices.Rule rule) {
            return base.Channel.UpdateRuleAsync(rule);
        }
        
        public void DeleteRule(Manager.FuelingServices.Rule rule) {
            base.Channel.DeleteRule(rule);
        }
        
        public System.Threading.Tasks.Task DeleteRuleAsync(Manager.FuelingServices.Rule rule) {
            return base.Channel.DeleteRuleAsync(rule);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Car> GetFleetCars(int fleetId) {
            return base.Channel.GetFleetCars(fleetId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Car>> GetFleetCarsAsync(int fleetId) {
            return base.Channel.GetFleetCarsAsync(fleetId);
        }
        
        public int GetFleetCarsAmount(int fleetId) {
            return base.Channel.GetFleetCarsAmount(fleetId);
        }
        
        public System.Threading.Tasks.Task<int> GetFleetCarsAmountAsync(int fleetId) {
            return base.Channel.GetFleetCarsAmountAsync(fleetId);
        }
        
        public void AddWorkerCar(Manager.FuelingServices.Car car) {
            base.Channel.AddWorkerCar(car);
        }
        
        public System.Threading.Tasks.Task AddWorkerCarAsync(Manager.FuelingServices.Car car) {
            return base.Channel.AddWorkerCarAsync(car);
        }
        
        public void UpdateWorkerCar(Manager.FuelingServices.Car car) {
            base.Channel.UpdateWorkerCar(car);
        }
        
        public System.Threading.Tasks.Task UpdateWorkerCarAsync(Manager.FuelingServices.Car car) {
            return base.Channel.UpdateWorkerCarAsync(car);
        }
        
        public void DeleteWorkerCar(Manager.FuelingServices.Car car) {
            base.Channel.DeleteWorkerCar(car);
        }
        
        public System.Threading.Tasks.Task DeleteWorkerCarAsync(Manager.FuelingServices.Car car) {
            return base.Channel.DeleteWorkerCarAsync(car);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Transaction> GetTransactions(int fleetID) {
            return base.Channel.GetTransactions(fleetID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Transaction>> GetTransactionsAsync(int fleetID) {
            return base.Channel.GetTransactionsAsync(fleetID);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.Transaction> GetTransactionsByCarID(int carID) {
            return base.Channel.GetTransactionsByCarID(carID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.Transaction>> GetTransactionsByCarIDAsync(int carID) {
            return base.Channel.GetTransactionsByCarIDAsync(carID);
        }
        
        public System.Collections.Generic.List<Manager.FuelingServices.RejectedRequest> GetRejectedRequests(int fleetID) {
            return base.Channel.GetRejectedRequests(fleetID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Manager.FuelingServices.RejectedRequest>> GetRejectedRequestsAsync(int fleetID) {
            return base.Channel.GetRejectedRequestsAsync(fleetID);
        }
    }
}
