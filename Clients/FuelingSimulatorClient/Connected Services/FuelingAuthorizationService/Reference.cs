//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FuelingSimulatorClient.FuelingAuthorizationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuellingRequest", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class FuellingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelingSimulatorClient.FuelingAuthorizationService.Product ChosenProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelingSimulatorClient.FuelingAuthorizationService.Station GasStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelingSimulatorClient.FuelingAuthorizationService.Product ChosenProduct {
            get {
                return this.ChosenProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ChosenProductField, value) != true)) {
                    this.ChosenProductField = value;
                    this.RaisePropertyChanged("ChosenProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelingSimulatorClient.FuelingAuthorizationService.Station GasStation {
            get {
                return this.GasStationField;
            }
            set {
                if ((object.ReferenceEquals(this.GasStationField, value) != true)) {
                    this.GasStationField = value;
                    this.RaisePropertyChanged("GasStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNumber {
            get {
                return this.PlateNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNumberField, value) != true)) {
                    this.PlateNumberField = value;
                    this.RaisePropertyChanged("PlateNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Product : FuelingSimulatorClient.FuelingAuthorizationService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Station : FuelingSimulatorClient.FuelingAuthorizationService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelingSimulatorClient.FuelingAuthorizationService.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Tag> TagsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelingSimulatorClient.FuelingAuthorizationService.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationID {
            get {
                return this.StationIDField;
            }
            set {
                if ((this.StationIDField.Equals(value) != true)) {
                    this.StationIDField = value;
                    this.RaisePropertyChanged("StationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationName {
            get {
                return this.StationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StationNameField, value) != true)) {
                    this.StationNameField = value;
                    this.RaisePropertyChanged("StationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Tag> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FuelingSimulatorClient.FuelingAuthorizationService.Station))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FuelingSimulatorClient.FuelingAuthorizationService.City))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FuelingSimulatorClient.FuelingAuthorizationService.Tag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FuelingSimulatorClient.FuelingAuthorizationService.Product))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class City : FuelingSimulatorClient.FuelingAuthorizationService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Tag : FuelingSimulatorClient.FuelingAuthorizationService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuellingRespond", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class FuellingRespond : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExplinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Explination {
            get {
                return this.ExplinationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExplinationField, value) != true)) {
                    this.ExplinationField = value;
                    this.RaisePropertyChanged("Explination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowed {
            get {
                return this.IsAllowedField;
            }
            set {
                if ((this.IsAllowedField.Equals(value) != true)) {
                    this.IsAllowedField = value;
                    this.RaisePropertyChanged("IsAllowed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FuelingAuthorizationService.IFuelingAuthorizationService")]
    public interface IFuelingAuthorizationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/FuellingRequest", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/FuellingRequestResponse")]
        FuelingSimulatorClient.FuelingAuthorizationService.FuellingRespond FuellingRequest(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/FuellingRequest", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/FuellingRequestResponse")]
        System.Threading.Tasks.Task<FuelingSimulatorClient.FuelingAuthorizationService.FuellingRespond> FuellingRequestAsync(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/FuellingReport", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/FuellingReportResponse")]
        void FuellingReport(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/FuellingReport", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/FuellingReportResponse")]
        System.Threading.Tasks.Task FuellingReportAsync(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/CheckExistingCarByPlateNumber", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/CheckExistingCarByPlateNumberResp" +
            "onse")]
        bool CheckExistingCarByPlateNumber(string plateNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/CheckExistingCarByPlateNumber", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/CheckExistingCarByPlateNumberResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> CheckExistingCarByPlateNumberAsync(string plateNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetStations", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetStationsResponse")]
        System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Station> GetStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetStations", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetStationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Station>> GetStationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetStationsAmount", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetStationsAmountResponse")]
        int GetStationsAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetStationsAmount", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetStationsAmountResponse")]
        System.Threading.Tasks.Task<int> GetStationsAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetProductsAmount", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetProductsAmountResponse")]
        int GetProductsAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetProductsAmount", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetProductsAmountResponse")]
        System.Threading.Tasks.Task<int> GetProductsAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetProducts", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetProductsResponse")]
        System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Product> GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFuelingAuthorizationService/GetProducts", ReplyAction="http://tempuri.org/IFuelingAuthorizationService/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Product>> GetProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFuelingAuthorizationServiceChannel : FuelingSimulatorClient.FuelingAuthorizationService.IFuelingAuthorizationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FuelingAuthorizationServiceClient : System.ServiceModel.ClientBase<FuelingSimulatorClient.FuelingAuthorizationService.IFuelingAuthorizationService>, FuelingSimulatorClient.FuelingAuthorizationService.IFuelingAuthorizationService {
        
        public FuelingAuthorizationServiceClient() {
        }
        
        public FuelingAuthorizationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FuelingAuthorizationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FuelingAuthorizationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FuelingAuthorizationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FuelingSimulatorClient.FuelingAuthorizationService.FuellingRespond FuellingRequest(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request) {
            return base.Channel.FuellingRequest(request);
        }
        
        public System.Threading.Tasks.Task<FuelingSimulatorClient.FuelingAuthorizationService.FuellingRespond> FuellingRequestAsync(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request) {
            return base.Channel.FuellingRequestAsync(request);
        }
        
        public void FuellingReport(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request, double amount) {
            base.Channel.FuellingReport(request, amount);
        }
        
        public System.Threading.Tasks.Task FuellingReportAsync(FuelingSimulatorClient.FuelingAuthorizationService.FuellingRequest request, double amount) {
            return base.Channel.FuellingReportAsync(request, amount);
        }
        
        public bool CheckExistingCarByPlateNumber(string plateNumber) {
            return base.Channel.CheckExistingCarByPlateNumber(plateNumber);
        }
        
        public System.Threading.Tasks.Task<bool> CheckExistingCarByPlateNumberAsync(string plateNumber) {
            return base.Channel.CheckExistingCarByPlateNumberAsync(plateNumber);
        }
        
        public System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Station> GetStations() {
            return base.Channel.GetStations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Station>> GetStationsAsync() {
            return base.Channel.GetStationsAsync();
        }
        
        public int GetStationsAmount() {
            return base.Channel.GetStationsAmount();
        }
        
        public System.Threading.Tasks.Task<int> GetStationsAmountAsync() {
            return base.Channel.GetStationsAmountAsync();
        }
        
        public int GetProductsAmount() {
            return base.Channel.GetProductsAmount();
        }
        
        public System.Threading.Tasks.Task<int> GetProductsAmountAsync() {
            return base.Channel.GetProductsAmountAsync();
        }
        
        public System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Product> GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FuelingSimulatorClient.FuelingAuthorizationService.Product>> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
    }
}
